{"ast":null,"code":"var _jsxFileName = \"A:\\\\reactproject\\\\src\\\\List.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = props => {\n  if (props.obj.isplanet) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    align: \"center\",\n    children: [props.obj.name, \" is a planet\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 16\n  }, this);else return /*#__PURE__*/_jsxDEV(\"h1\", {\n    align: \"center\",\n    children: [props.obj.name, \" is not a planet\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 16\n  }, this);\n};\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["List","props","obj","isplanet","_jsxDEV","align","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["A:/reactproject/src/List.js"],"sourcesContent":["export const List = (props) => {\r\n    if(props.obj.isplanet)\r\n        return <h1 align= \"center\">{props.obj.name} is a planet</h1>\r\n    else\r\n        return <h1 align = \"center\">{props.obj.name} is not a planet</h1>\r\n}"],"mappings":";;AAAA,OAAO,MAAMA,IAAI,GAAIC,KAAK,IAAK;EAC3B,IAAGA,KAAK,CAACC,GAAG,CAACC,QAAQ,EACjB,oBAAOC,OAAA;IAAIC,KAAK,EAAE,QAAQ;IAAAC,QAAA,GAAEL,KAAK,CAACC,GAAG,CAACK,IAAI,EAAC,cAAY;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,MAE5D,oBAAOP,OAAA;IAAIC,KAAK,EAAG,QAAQ;IAAAC,QAAA,GAAEL,KAAK,CAACC,GAAG,CAACK,IAAI,EAAC,kBAAgB;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACzE,CAAC;AAAAC,EAAA,GALYZ,IAAI;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}